ARM GAS  /tmp/ccBmHUp3.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.__io_putchar,"ax",%progbits
  18              		.align	1
  19              		.global	__io_putchar
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	__io_putchar:
  27              	.LVL0:
  28              	.LFB133:
  29              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  21:Src/main.c    **** #include "main.h"
  22:Src/main.c    **** #include "usart.h"
  23:Src/main.c    **** #include "gpio.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** #include <stdio.h>
  28:Src/main.c    **** /* USER CODE END Includes */
  29:Src/main.c    **** 
ARM GAS  /tmp/ccBmHUp3.s 			page 2


  30:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN PTD */
  32:Src/main.c    **** 
  33:Src/main.c    **** /* USER CODE END PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PD */
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE BEGIN PV */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END PV */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  51:Src/main.c    **** void SystemClock_Config(void);
  52:Src/main.c    **** /* USER CODE BEGIN PFP */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PFP */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  57:Src/main.c    **** /* USER CODE BEGIN 0 */
  58:Src/main.c    **** #ifdef __GNUC__
  59:Src/main.c    **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  60:Src/main.c    **** #else
  61:Src/main.c    **** #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
  62:Src/main.c    **** #endif
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END PFP */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE BEGIN 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** PUTCHAR_PROTOTYPE
  69:Src/main.c    **** {
  30              		.loc 1 69 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 69 1 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
  42 0004 0190     		str	r0, [sp, #4]
  70:Src/main.c    ****     HAL_UART_Transmit(&huart1 , (uint8_t *)&ch, 1, 0xFFFF);
  43              		.loc 1 70 5 is_stmt 1 view .LVU2
  44 0006 4FF6FF73 		movw	r3, #65535
  45 000a 0122     		movs	r2, #1
ARM GAS  /tmp/ccBmHUp3.s 			page 3


  46 000c 01A9     		add	r1, sp, #4
  47 000e 0348     		ldr	r0, .L3
  48              	.LVL1:
  49              		.loc 1 70 5 is_stmt 0 view .LVU3
  50 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  51              	.LVL2:
  71:Src/main.c    ****     return ch;
  52              		.loc 1 71 5 is_stmt 1 view .LVU4
  72:Src/main.c    **** }
  53              		.loc 1 72 1 is_stmt 0 view .LVU5
  54 0014 0198     		ldr	r0, [sp, #4]
  55 0016 03B0     		add	sp, sp, #12
  56              	.LCFI2:
  57              		.cfi_def_cfa_offset 4
  58              		@ sp needed
  59 0018 5DF804FB 		ldr	pc, [sp], #4
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 001c 00000000 		.word	huart1
  64              		.cfi_endproc
  65              	.LFE133:
  67              		.section	.text.Error_Handler,"ax",%progbits
  68              		.align	1
  69              		.global	Error_Handler
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	Error_Handler:
  76              	.LFB136:
  73:Src/main.c    **** /* USER CODE END 0 */
  74:Src/main.c    **** 
  75:Src/main.c    **** /**
  76:Src/main.c    ****   * @brief  The application entry point.
  77:Src/main.c    ****   * @retval int
  78:Src/main.c    ****   */
  79:Src/main.c    **** int main(void)
  80:Src/main.c    **** {
  81:Src/main.c    ****   /* USER CODE BEGIN 1 */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE END 1 */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  88:Src/main.c    ****   HAL_Init();
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE BEGIN Init */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE END Init */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* Configure the system clock */
  95:Src/main.c    ****   SystemClock_Config();
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  98:Src/main.c    **** 
ARM GAS  /tmp/ccBmHUp3.s 			page 4


  99:Src/main.c    ****   /* USER CODE END SysInit */
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* Initialize all configured peripherals */
 102:Src/main.c    ****   MX_GPIO_Init();
 103:Src/main.c    ****   MX_USART1_UART_Init();
 104:Src/main.c    ****   /* USER CODE BEGIN 2 */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE END 2 */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* Infinite loop */
 109:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 110:Src/main.c    ****   while (1)
 111:Src/main.c    ****   {
 112:Src/main.c    ****     /* USER CODE END WHILE */
 113:Src/main.c    **** 
 114:Src/main.c    ****     /* USER CODE BEGIN 3 */
 115:Src/main.c    ****     HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
 116:Src/main.c    ****     HAL_Delay(500);
 117:Src/main.c    ****     printf("printf function UART1 output test~~!\r\n");
 118:Src/main.c    **** 	  HAL_UART_Transmit(&huart1,"\r\nUART Transmit\r\n",17,10);
 119:Src/main.c    ****     HAL_GPIO_TogglePin(LED2_GPIO_Port, LED2_Pin);
 120:Src/main.c    ****     HAL_Delay(500);
 121:Src/main.c    ****   }
 122:Src/main.c    ****   /* USER CODE END 3 */
 123:Src/main.c    **** }
 124:Src/main.c    **** 
 125:Src/main.c    **** /**
 126:Src/main.c    ****   * @brief System Clock Configuration
 127:Src/main.c    ****   * @retval None
 128:Src/main.c    ****   */
 129:Src/main.c    **** void SystemClock_Config(void)
 130:Src/main.c    **** {
 131:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 132:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 133:Src/main.c    **** 
 134:Src/main.c    ****   /** Configure the main internal regulator output voltage
 135:Src/main.c    ****   */
 136:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 137:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 138:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 139:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 140:Src/main.c    ****   */
 141:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 142:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 149:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 150:Src/main.c    ****   {
 151:Src/main.c    ****     Error_Handler();
 152:Src/main.c    ****   }
 153:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 154:Src/main.c    ****   */
 155:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  /tmp/ccBmHUp3.s 			page 5


 156:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 157:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 158:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 159:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 160:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 161:Src/main.c    **** 
 162:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 163:Src/main.c    ****   {
 164:Src/main.c    ****     Error_Handler();
 165:Src/main.c    ****   }
 166:Src/main.c    **** }
 167:Src/main.c    **** 
 168:Src/main.c    **** /* USER CODE BEGIN 4 */
 169:Src/main.c    **** 
 170:Src/main.c    **** /* USER CODE END 4 */
 171:Src/main.c    **** 
 172:Src/main.c    **** /**
 173:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 174:Src/main.c    ****   * @retval None
 175:Src/main.c    ****   */
 176:Src/main.c    **** void Error_Handler(void)
 177:Src/main.c    **** {
  77              		.loc 1 177 1 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ Volatile: function does not return.
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
 178:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 179:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 180:Src/main.c    ****   __disable_irq();
  83              		.loc 1 180 3 view .LVU7
  84              	.LBB4:
  85              	.LBI4:
  86              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
ARM GAS  /tmp/ccBmHUp3.s 			page 6


  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccBmHUp3.s 			page 7


  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
ARM GAS  /tmp/ccBmHUp3.s 			page 8


 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  87              		.loc 2 140 27 view .LVU8
  88              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  89              		.loc 2 142 3 view .LVU9
  90              		.syntax unified
  91              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  92 0000 72B6     		cpsid i
  93              	@ 0 "" 2
  94              		.thumb
  95              		.syntax unified
  96              	.L6:
  97              	.LBE5:
  98              	.LBE4:
 181:Src/main.c    ****   while (1)
  99              		.loc 1 181 3 discriminator 1 view .LVU10
 182:Src/main.c    ****   {
 183:Src/main.c    ****   }
 100              		.loc 1 183 3 discriminator 1 view .LVU11
 181:Src/main.c    ****   while (1)
 101              		.loc 1 181 9 discriminator 1 view .LVU12
 102 0002 FEE7     		b	.L6
 103              		.cfi_endproc
 104              	.LFE136:
 106              		.section	.text.SystemClock_Config,"ax",%progbits
 107              		.align	1
 108              		.global	SystemClock_Config
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 112              		.fpu fpv4-sp-d16
 114              	SystemClock_Config:
 115              	.LFB135:
 130:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 116              		.loc 1 130 1 view -0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 80
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120 0000 00B5     		push	{lr}
 121              	.LCFI3:
 122              		.cfi_def_cfa_offset 4
 123              		.cfi_offset 14, -4
 124 0002 95B0     		sub	sp, sp, #84
 125              	.LCFI4:
 126              		.cfi_def_cfa_offset 88
 131:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 127              		.loc 1 131 3 view .LVU14
 131:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 128              		.loc 1 131 22 is_stmt 0 view .LVU15
 129 0004 3022     		movs	r2, #48
 130 0006 0021     		movs	r1, #0
 131 0008 08A8     		add	r0, sp, #32
 132 000a FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccBmHUp3.s 			page 9


 133              	.LVL3:
 132:Src/main.c    **** 
 134              		.loc 1 132 3 is_stmt 1 view .LVU16
 132:Src/main.c    **** 
 135              		.loc 1 132 22 is_stmt 0 view .LVU17
 136 000e 0023     		movs	r3, #0
 137 0010 0393     		str	r3, [sp, #12]
 138 0012 0493     		str	r3, [sp, #16]
 139 0014 0593     		str	r3, [sp, #20]
 140 0016 0693     		str	r3, [sp, #24]
 141 0018 0793     		str	r3, [sp, #28]
 136:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 142              		.loc 1 136 3 is_stmt 1 view .LVU18
 143              	.LBB6:
 136:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 144              		.loc 1 136 3 view .LVU19
 145 001a 0193     		str	r3, [sp, #4]
 136:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 146              		.loc 1 136 3 view .LVU20
 147 001c 204A     		ldr	r2, .L13
 148 001e 116C     		ldr	r1, [r2, #64]
 149 0020 41F08051 		orr	r1, r1, #268435456
 150 0024 1164     		str	r1, [r2, #64]
 136:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 151              		.loc 1 136 3 view .LVU21
 152 0026 126C     		ldr	r2, [r2, #64]
 153 0028 02F08052 		and	r2, r2, #268435456
 154 002c 0192     		str	r2, [sp, #4]
 136:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 155              		.loc 1 136 3 view .LVU22
 156 002e 019A     		ldr	r2, [sp, #4]
 157              	.LBE6:
 136:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 158              		.loc 1 136 3 view .LVU23
 137:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 159              		.loc 1 137 3 view .LVU24
 160              	.LBB7:
 137:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 161              		.loc 1 137 3 view .LVU25
 162 0030 0293     		str	r3, [sp, #8]
 137:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 163              		.loc 1 137 3 view .LVU26
 164 0032 1C4B     		ldr	r3, .L13+4
 165 0034 1A68     		ldr	r2, [r3]
 166 0036 42F48042 		orr	r2, r2, #16384
 167 003a 1A60     		str	r2, [r3]
 137:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 168              		.loc 1 137 3 view .LVU27
 169 003c 1B68     		ldr	r3, [r3]
 170 003e 03F48043 		and	r3, r3, #16384
 171 0042 0293     		str	r3, [sp, #8]
 137:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 172              		.loc 1 137 3 view .LVU28
 173 0044 029B     		ldr	r3, [sp, #8]
 174              	.LBE7:
 137:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 175              		.loc 1 137 3 view .LVU29
ARM GAS  /tmp/ccBmHUp3.s 			page 10


 141:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 176              		.loc 1 141 3 view .LVU30
 141:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 177              		.loc 1 141 36 is_stmt 0 view .LVU31
 178 0046 0123     		movs	r3, #1
 179 0048 0893     		str	r3, [sp, #32]
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 180              		.loc 1 142 3 is_stmt 1 view .LVU32
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 181              		.loc 1 142 30 is_stmt 0 view .LVU33
 182 004a 4FF48033 		mov	r3, #65536
 183 004e 0993     		str	r3, [sp, #36]
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 184              		.loc 1 143 3 is_stmt 1 view .LVU34
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 185              		.loc 1 143 34 is_stmt 0 view .LVU35
 186 0050 0222     		movs	r2, #2
 187 0052 0E92     		str	r2, [sp, #56]
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 188              		.loc 1 144 3 is_stmt 1 view .LVU36
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 189              		.loc 1 144 35 is_stmt 0 view .LVU37
 190 0054 4FF48003 		mov	r3, #4194304
 191 0058 0F93     		str	r3, [sp, #60]
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 192              		.loc 1 145 3 is_stmt 1 view .LVU38
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 193              		.loc 1 145 30 is_stmt 0 view .LVU39
 194 005a 0423     		movs	r3, #4
 195 005c 1093     		str	r3, [sp, #64]
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 196              		.loc 1 146 3 is_stmt 1 view .LVU40
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 197              		.loc 1 146 30 is_stmt 0 view .LVU41
 198 005e A821     		movs	r1, #168
 199 0060 1191     		str	r1, [sp, #68]
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 200              		.loc 1 147 3 is_stmt 1 view .LVU42
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 201              		.loc 1 147 30 is_stmt 0 view .LVU43
 202 0062 1292     		str	r2, [sp, #72]
 148:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 203              		.loc 1 148 3 is_stmt 1 view .LVU44
 148:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 204              		.loc 1 148 30 is_stmt 0 view .LVU45
 205 0064 1393     		str	r3, [sp, #76]
 149:Src/main.c    ****   {
 206              		.loc 1 149 3 is_stmt 1 view .LVU46
 149:Src/main.c    ****   {
 207              		.loc 1 149 7 is_stmt 0 view .LVU47
 208 0066 08A8     		add	r0, sp, #32
 209 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 210              	.LVL4:
 149:Src/main.c    ****   {
 211              		.loc 1 149 6 view .LVU48
 212 006c 98B9     		cbnz	r0, .L11
 155:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccBmHUp3.s 			page 11


 213              		.loc 1 155 3 is_stmt 1 view .LVU49
 155:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 214              		.loc 1 155 31 is_stmt 0 view .LVU50
 215 006e 0F23     		movs	r3, #15
 216 0070 0393     		str	r3, [sp, #12]
 157:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 217              		.loc 1 157 3 is_stmt 1 view .LVU51
 157:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 218              		.loc 1 157 34 is_stmt 0 view .LVU52
 219 0072 0223     		movs	r3, #2
 220 0074 0493     		str	r3, [sp, #16]
 158:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 221              		.loc 1 158 3 is_stmt 1 view .LVU53
 158:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 222              		.loc 1 158 35 is_stmt 0 view .LVU54
 223 0076 0023     		movs	r3, #0
 224 0078 0593     		str	r3, [sp, #20]
 159:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 225              		.loc 1 159 3 is_stmt 1 view .LVU55
 159:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 226              		.loc 1 159 36 is_stmt 0 view .LVU56
 227 007a 4FF4A053 		mov	r3, #5120
 228 007e 0693     		str	r3, [sp, #24]
 160:Src/main.c    **** 
 229              		.loc 1 160 3 is_stmt 1 view .LVU57
 160:Src/main.c    **** 
 230              		.loc 1 160 36 is_stmt 0 view .LVU58
 231 0080 4FF48053 		mov	r3, #4096
 232 0084 0793     		str	r3, [sp, #28]
 162:Src/main.c    ****   {
 233              		.loc 1 162 3 is_stmt 1 view .LVU59
 162:Src/main.c    ****   {
 234              		.loc 1 162 7 is_stmt 0 view .LVU60
 235 0086 0521     		movs	r1, #5
 236 0088 03A8     		add	r0, sp, #12
 237 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 238              	.LVL5:
 162:Src/main.c    ****   {
 239              		.loc 1 162 6 view .LVU61
 240 008e 20B9     		cbnz	r0, .L12
 166:Src/main.c    **** 
 241              		.loc 1 166 1 view .LVU62
 242 0090 15B0     		add	sp, sp, #84
 243              	.LCFI5:
 244              		.cfi_remember_state
 245              		.cfi_def_cfa_offset 4
 246              		@ sp needed
 247 0092 5DF804FB 		ldr	pc, [sp], #4
 248              	.L11:
 249              	.LCFI6:
 250              		.cfi_restore_state
 151:Src/main.c    ****   }
 251              		.loc 1 151 5 is_stmt 1 view .LVU63
 252 0096 FFF7FEFF 		bl	Error_Handler
 253              	.LVL6:
 254              	.L12:
 164:Src/main.c    ****   }
ARM GAS  /tmp/ccBmHUp3.s 			page 12


 255              		.loc 1 164 5 view .LVU64
 256 009a FFF7FEFF 		bl	Error_Handler
 257              	.LVL7:
 258              	.L14:
 259 009e 00BF     		.align	2
 260              	.L13:
 261 00a0 00380240 		.word	1073887232
 262 00a4 00700040 		.word	1073770496
 263              		.cfi_endproc
 264              	.LFE135:
 266              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 267              		.align	2
 268              	.LC0:
 269 0000 7072696E 		.ascii	"printf function UART1 output test~~!\015\000"
 269      74662066 
 269      756E6374 
 269      696F6E20 
 269      55415254 
 270 0026 0000     		.align	2
 271              	.LC1:
 272 0028 0D0A5541 		.ascii	"\015\012UART Transmit\015\012\000"
 272      52542054 
 272      72616E73 
 272      6D69740D 
 272      0A00
 273              		.section	.text.main,"ax",%progbits
 274              		.align	1
 275              		.global	main
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu fpv4-sp-d16
 281              	main:
 282              	.LFB134:
  80:Src/main.c    ****   /* USER CODE BEGIN 1 */
 283              		.loc 1 80 1 view -0
 284              		.cfi_startproc
 285              		@ Volatile: function does not return.
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288 0000 08B5     		push	{r3, lr}
 289              	.LCFI7:
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 3, -8
 292              		.cfi_offset 14, -4
  88:Src/main.c    **** 
 293              		.loc 1 88 3 view .LVU66
 294 0002 FFF7FEFF 		bl	HAL_Init
 295              	.LVL8:
  95:Src/main.c    **** 
 296              		.loc 1 95 3 view .LVU67
 297 0006 FFF7FEFF 		bl	SystemClock_Config
 298              	.LVL9:
 102:Src/main.c    ****   MX_USART1_UART_Init();
 299              		.loc 1 102 3 view .LVU68
 300 000a FFF7FEFF 		bl	MX_GPIO_Init
 301              	.LVL10:
ARM GAS  /tmp/ccBmHUp3.s 			page 13


 103:Src/main.c    ****   /* USER CODE BEGIN 2 */
 302              		.loc 1 103 3 view .LVU69
 303 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 304              	.LVL11:
 305              	.L16:
 110:Src/main.c    ****   {
 306              		.loc 1 110 3 discriminator 1 view .LVU70
 115:Src/main.c    ****     HAL_Delay(500);
 307              		.loc 1 115 5 discriminator 1 view .LVU71
 308 0012 0D4C     		ldr	r4, .L18
 309 0014 4021     		movs	r1, #64
 310 0016 2046     		mov	r0, r4
 311 0018 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 312              	.LVL12:
 116:Src/main.c    ****     printf("printf function UART1 output test~~!\r\n");
 313              		.loc 1 116 5 discriminator 1 view .LVU72
 314 001c 4FF4FA70 		mov	r0, #500
 315 0020 FFF7FEFF 		bl	HAL_Delay
 316              	.LVL13:
 117:Src/main.c    **** 	  HAL_UART_Transmit(&huart1,"\r\nUART Transmit\r\n",17,10);
 317              		.loc 1 117 5 discriminator 1 view .LVU73
 318 0024 0948     		ldr	r0, .L18+4
 319 0026 FFF7FEFF 		bl	puts
 320              	.LVL14:
 118:Src/main.c    ****     HAL_GPIO_TogglePin(LED2_GPIO_Port, LED2_Pin);
 321              		.loc 1 118 4 discriminator 1 view .LVU74
 322 002a 0A23     		movs	r3, #10
 323 002c 1122     		movs	r2, #17
 324 002e 0849     		ldr	r1, .L18+8
 325 0030 0848     		ldr	r0, .L18+12
 326 0032 FFF7FEFF 		bl	HAL_UART_Transmit
 327              	.LVL15:
 119:Src/main.c    ****     HAL_Delay(500);
 328              		.loc 1 119 5 discriminator 1 view .LVU75
 329 0036 8021     		movs	r1, #128
 330 0038 2046     		mov	r0, r4
 331 003a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 332              	.LVL16:
 120:Src/main.c    ****   }
 333              		.loc 1 120 5 discriminator 1 view .LVU76
 334 003e 4FF4FA70 		mov	r0, #500
 335 0042 FFF7FEFF 		bl	HAL_Delay
 336              	.LVL17:
 110:Src/main.c    ****   {
 337              		.loc 1 110 9 discriminator 1 view .LVU77
 338 0046 E4E7     		b	.L16
 339              	.L19:
 340              		.align	2
 341              	.L18:
 342 0048 00000240 		.word	1073872896
 343 004c 00000000 		.word	.LC0
 344 0050 28000000 		.word	.LC1
 345 0054 00000000 		.word	huart1
 346              		.cfi_endproc
 347              	.LFE134:
 349              		.text
 350              	.Letext0:
ARM GAS  /tmp/ccBmHUp3.s 			page 14


 351              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 352              		.file 4 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 353              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 354              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 355              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 356              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 357              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 358              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 359              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 360              		.file 12 "Inc/gpio.h"
 361              		.file 13 "Inc/usart.h"
 362              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 363              		.file 15 "<built-in>"
ARM GAS  /tmp/ccBmHUp3.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccBmHUp3.s:18     .text.__io_putchar:0000000000000000 $t
     /tmp/ccBmHUp3.s:26     .text.__io_putchar:0000000000000000 __io_putchar
     /tmp/ccBmHUp3.s:63     .text.__io_putchar:000000000000001c $d
     /tmp/ccBmHUp3.s:68     .text.Error_Handler:0000000000000000 $t
     /tmp/ccBmHUp3.s:75     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccBmHUp3.s:107    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccBmHUp3.s:114    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccBmHUp3.s:261    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccBmHUp3.s:267    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccBmHUp3.s:274    .text.main:0000000000000000 $t
     /tmp/ccBmHUp3.s:281    .text.main:0000000000000000 main
     /tmp/ccBmHUp3.s:342    .text.main:0000000000000048 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
HAL_GPIO_TogglePin
HAL_Delay
puts
