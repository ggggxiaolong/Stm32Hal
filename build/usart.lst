ARM GAS  /tmp/ccAxlZXA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_USART1_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_USART1_UART_Init:
  27              	.LFB130:
  28              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * @file    usart.c
   4:Src/usart.c   ****   * @brief   This file provides code for the configuration
   5:Src/usart.c   ****   *          of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   * @attention
   8:Src/usart.c   ****   *
   9:Src/usart.c   ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/usart.c   ****   * All rights reserved.</center></h2>
  11:Src/usart.c   ****   *
  12:Src/usart.c   ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/usart.c   ****   * the "License"; You may not use this file except in compliance with the
  14:Src/usart.c   ****   * License. You may obtain a copy of the License at:
  15:Src/usart.c   ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/usart.c   ****   *
  17:Src/usart.c   ****   ******************************************************************************
  18:Src/usart.c   ****   */
  19:Src/usart.c   **** 
  20:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  21:Src/usart.c   **** #include "usart.h"
  22:Src/usart.c   **** 
  23:Src/usart.c   **** /* USER CODE BEGIN 0 */
  24:Src/usart.c   **** 
  25:Src/usart.c   **** /* USER CODE END 0 */
  26:Src/usart.c   **** 
  27:Src/usart.c   **** UART_HandleTypeDef huart1;
  28:Src/usart.c   **** 
  29:Src/usart.c   **** /* USART1 init function */
  30:Src/usart.c   **** 
ARM GAS  /tmp/ccAxlZXA.s 			page 2


  31:Src/usart.c   **** void MX_USART1_UART_Init(void)
  32:Src/usart.c   **** {
  29              		.loc 1 32 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  33:Src/usart.c   **** 
  34:Src/usart.c   ****   /* USER CODE BEGIN USART1_Init 0 */
  35:Src/usart.c   **** 
  36:Src/usart.c   ****   /* USER CODE END USART1_Init 0 */
  37:Src/usart.c   **** 
  38:Src/usart.c   ****   /* USER CODE BEGIN USART1_Init 1 */
  39:Src/usart.c   **** 
  40:Src/usart.c   ****   /* USER CODE END USART1_Init 1 */
  41:Src/usart.c   ****   huart1.Instance = USART1;
  38              		.loc 1 41 3 view .LVU1
  39              		.loc 1 41 19 is_stmt 0 view .LVU2
  40 0002 0A48     		ldr	r0, .L5
  41 0004 0A4B     		ldr	r3, .L5+4
  42 0006 0360     		str	r3, [r0]
  42:Src/usart.c   ****   huart1.Init.BaudRate = 115200;
  43              		.loc 1 42 3 is_stmt 1 view .LVU3
  44              		.loc 1 42 24 is_stmt 0 view .LVU4
  45 0008 4FF4E133 		mov	r3, #115200
  46 000c 4360     		str	r3, [r0, #4]
  43:Src/usart.c   ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  47              		.loc 1 43 3 is_stmt 1 view .LVU5
  48              		.loc 1 43 26 is_stmt 0 view .LVU6
  49 000e 0023     		movs	r3, #0
  50 0010 8360     		str	r3, [r0, #8]
  44:Src/usart.c   ****   huart1.Init.StopBits = UART_STOPBITS_1;
  51              		.loc 1 44 3 is_stmt 1 view .LVU7
  52              		.loc 1 44 24 is_stmt 0 view .LVU8
  53 0012 C360     		str	r3, [r0, #12]
  45:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_NONE;
  54              		.loc 1 45 3 is_stmt 1 view .LVU9
  55              		.loc 1 45 22 is_stmt 0 view .LVU10
  56 0014 0361     		str	r3, [r0, #16]
  46:Src/usart.c   ****   huart1.Init.Mode = UART_MODE_TX_RX;
  57              		.loc 1 46 3 is_stmt 1 view .LVU11
  58              		.loc 1 46 20 is_stmt 0 view .LVU12
  59 0016 0C22     		movs	r2, #12
  60 0018 4261     		str	r2, [r0, #20]
  47:Src/usart.c   ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  61              		.loc 1 47 3 is_stmt 1 view .LVU13
  62              		.loc 1 47 25 is_stmt 0 view .LVU14
  63 001a 8361     		str	r3, [r0, #24]
  48:Src/usart.c   ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  64              		.loc 1 48 3 is_stmt 1 view .LVU15
  65              		.loc 1 48 28 is_stmt 0 view .LVU16
  66 001c C361     		str	r3, [r0, #28]
  49:Src/usart.c   ****   if (HAL_UART_Init(&huart1) != HAL_OK)
ARM GAS  /tmp/ccAxlZXA.s 			page 3


  67              		.loc 1 49 3 is_stmt 1 view .LVU17
  68              		.loc 1 49 7 is_stmt 0 view .LVU18
  69 001e FFF7FEFF 		bl	HAL_UART_Init
  70              	.LVL0:
  71              		.loc 1 49 6 view .LVU19
  72 0022 00B9     		cbnz	r0, .L4
  73              	.L1:
  50:Src/usart.c   ****   {
  51:Src/usart.c   ****     Error_Handler();
  52:Src/usart.c   ****   }
  53:Src/usart.c   ****   /* USER CODE BEGIN USART1_Init 2 */
  54:Src/usart.c   **** 
  55:Src/usart.c   ****   /* USER CODE END USART1_Init 2 */
  56:Src/usart.c   **** 
  57:Src/usart.c   **** }
  74              		.loc 1 57 1 view .LVU20
  75 0024 08BD     		pop	{r3, pc}
  76              	.L4:
  51:Src/usart.c   ****   }
  77              		.loc 1 51 5 is_stmt 1 view .LVU21
  78 0026 FFF7FEFF 		bl	Error_Handler
  79              	.LVL1:
  80              		.loc 1 57 1 is_stmt 0 view .LVU22
  81 002a FBE7     		b	.L1
  82              	.L6:
  83              		.align	2
  84              	.L5:
  85 002c 00000000 		.word	.LANCHOR0
  86 0030 00100140 		.word	1073811456
  87              		.cfi_endproc
  88              	.LFE130:
  90              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  91              		.align	1
  92              		.global	HAL_UART_MspInit
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu fpv4-sp-d16
  98              	HAL_UART_MspInit:
  99              	.LVL2:
 100              	.LFB131:
  58:Src/usart.c   **** 
  59:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  60:Src/usart.c   **** {
 101              		.loc 1 60 1 is_stmt 1 view -0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 32
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		.loc 1 60 1 is_stmt 0 view .LVU24
 106 0000 00B5     		push	{lr}
 107              	.LCFI1:
 108              		.cfi_def_cfa_offset 4
 109              		.cfi_offset 14, -4
 110 0002 89B0     		sub	sp, sp, #36
 111              	.LCFI2:
 112              		.cfi_def_cfa_offset 40
  61:Src/usart.c   **** 
ARM GAS  /tmp/ccAxlZXA.s 			page 4


  62:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 113              		.loc 1 62 3 is_stmt 1 view .LVU25
 114              		.loc 1 62 20 is_stmt 0 view .LVU26
 115 0004 0023     		movs	r3, #0
 116 0006 0393     		str	r3, [sp, #12]
 117 0008 0493     		str	r3, [sp, #16]
 118 000a 0593     		str	r3, [sp, #20]
 119 000c 0693     		str	r3, [sp, #24]
 120 000e 0793     		str	r3, [sp, #28]
  63:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 121              		.loc 1 63 3 is_stmt 1 view .LVU27
 122              		.loc 1 63 16 is_stmt 0 view .LVU28
 123 0010 0268     		ldr	r2, [r0]
 124              		.loc 1 63 5 view .LVU29
 125 0012 03F18043 		add	r3, r3, #1073741824
 126 0016 03F58833 		add	r3, r3, #69632
 127 001a 9A42     		cmp	r2, r3
 128 001c 02D0     		beq	.L10
 129              	.LVL3:
 130              	.L7:
  64:Src/usart.c   ****   {
  65:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 0 */
  66:Src/usart.c   **** 
  67:Src/usart.c   ****   /* USER CODE END USART1_MspInit 0 */
  68:Src/usart.c   ****     /* USART1 clock enable */
  69:Src/usart.c   ****     __HAL_RCC_USART1_CLK_ENABLE();
  70:Src/usart.c   **** 
  71:Src/usart.c   ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  72:Src/usart.c   ****     /**USART1 GPIO Configuration
  73:Src/usart.c   ****     PA9     ------> USART1_TX
  74:Src/usart.c   ****     PA10     ------> USART1_RX
  75:Src/usart.c   ****     */
  76:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
  77:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  78:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  79:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  80:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
  81:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  82:Src/usart.c   **** 
  83:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 1 */
  84:Src/usart.c   **** 
  85:Src/usart.c   ****   /* USER CODE END USART1_MspInit 1 */
  86:Src/usart.c   ****   }
  87:Src/usart.c   **** }
 131              		.loc 1 87 1 view .LVU30
 132 001e 09B0     		add	sp, sp, #36
 133              	.LCFI3:
 134              		.cfi_remember_state
 135              		.cfi_def_cfa_offset 4
 136              		@ sp needed
 137 0020 5DF804FB 		ldr	pc, [sp], #4
 138              	.LVL4:
 139              	.L10:
 140              	.LCFI4:
 141              		.cfi_restore_state
  69:Src/usart.c   **** 
 142              		.loc 1 69 5 is_stmt 1 view .LVU31
ARM GAS  /tmp/ccAxlZXA.s 			page 5


 143              	.LBB2:
  69:Src/usart.c   **** 
 144              		.loc 1 69 5 view .LVU32
 145 0024 0021     		movs	r1, #0
 146 0026 0191     		str	r1, [sp, #4]
  69:Src/usart.c   **** 
 147              		.loc 1 69 5 view .LVU33
 148 0028 03F59433 		add	r3, r3, #75776
 149 002c 5A6C     		ldr	r2, [r3, #68]
 150 002e 42F01002 		orr	r2, r2, #16
 151 0032 5A64     		str	r2, [r3, #68]
  69:Src/usart.c   **** 
 152              		.loc 1 69 5 view .LVU34
 153 0034 5A6C     		ldr	r2, [r3, #68]
 154 0036 02F01002 		and	r2, r2, #16
 155 003a 0192     		str	r2, [sp, #4]
  69:Src/usart.c   **** 
 156              		.loc 1 69 5 view .LVU35
 157 003c 019A     		ldr	r2, [sp, #4]
 158              	.LBE2:
  69:Src/usart.c   **** 
 159              		.loc 1 69 5 view .LVU36
  71:Src/usart.c   ****     /**USART1 GPIO Configuration
 160              		.loc 1 71 5 view .LVU37
 161              	.LBB3:
  71:Src/usart.c   ****     /**USART1 GPIO Configuration
 162              		.loc 1 71 5 view .LVU38
 163 003e 0291     		str	r1, [sp, #8]
  71:Src/usart.c   ****     /**USART1 GPIO Configuration
 164              		.loc 1 71 5 view .LVU39
 165 0040 1A6B     		ldr	r2, [r3, #48]
 166 0042 42F00102 		orr	r2, r2, #1
 167 0046 1A63     		str	r2, [r3, #48]
  71:Src/usart.c   ****     /**USART1 GPIO Configuration
 168              		.loc 1 71 5 view .LVU40
 169 0048 1B6B     		ldr	r3, [r3, #48]
 170 004a 03F00103 		and	r3, r3, #1
 171 004e 0293     		str	r3, [sp, #8]
  71:Src/usart.c   ****     /**USART1 GPIO Configuration
 172              		.loc 1 71 5 view .LVU41
 173 0050 029B     		ldr	r3, [sp, #8]
 174              	.LBE3:
  71:Src/usart.c   ****     /**USART1 GPIO Configuration
 175              		.loc 1 71 5 view .LVU42
  76:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 176              		.loc 1 76 5 view .LVU43
  76:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 177              		.loc 1 76 25 is_stmt 0 view .LVU44
 178 0052 4FF4C063 		mov	r3, #1536
 179 0056 0393     		str	r3, [sp, #12]
  77:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 180              		.loc 1 77 5 is_stmt 1 view .LVU45
  77:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 181              		.loc 1 77 26 is_stmt 0 view .LVU46
 182 0058 0223     		movs	r3, #2
 183 005a 0493     		str	r3, [sp, #16]
  78:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
ARM GAS  /tmp/ccAxlZXA.s 			page 6


 184              		.loc 1 78 5 is_stmt 1 view .LVU47
  79:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 185              		.loc 1 79 5 view .LVU48
  79:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 186              		.loc 1 79 27 is_stmt 0 view .LVU49
 187 005c 0323     		movs	r3, #3
 188 005e 0693     		str	r3, [sp, #24]
  80:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 189              		.loc 1 80 5 is_stmt 1 view .LVU50
  80:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 190              		.loc 1 80 31 is_stmt 0 view .LVU51
 191 0060 0723     		movs	r3, #7
 192 0062 0793     		str	r3, [sp, #28]
  81:Src/usart.c   **** 
 193              		.loc 1 81 5 is_stmt 1 view .LVU52
 194 0064 03A9     		add	r1, sp, #12
 195 0066 0248     		ldr	r0, .L11
 196              	.LVL5:
  81:Src/usart.c   **** 
 197              		.loc 1 81 5 is_stmt 0 view .LVU53
 198 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 199              	.LVL6:
 200              		.loc 1 87 1 view .LVU54
 201 006c D7E7     		b	.L7
 202              	.L12:
 203 006e 00BF     		.align	2
 204              	.L11:
 205 0070 00000240 		.word	1073872896
 206              		.cfi_endproc
 207              	.LFE131:
 209              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 210              		.align	1
 211              		.global	HAL_UART_MspDeInit
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 215              		.fpu fpv4-sp-d16
 217              	HAL_UART_MspDeInit:
 218              	.LVL7:
 219              	.LFB132:
  88:Src/usart.c   **** 
  89:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
  90:Src/usart.c   **** {
 220              		.loc 1 90 1 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		.loc 1 90 1 is_stmt 0 view .LVU56
 225 0000 08B5     		push	{r3, lr}
 226              	.LCFI5:
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 3, -8
 229              		.cfi_offset 14, -4
  91:Src/usart.c   **** 
  92:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 230              		.loc 1 92 3 is_stmt 1 view .LVU57
 231              		.loc 1 92 16 is_stmt 0 view .LVU58
ARM GAS  /tmp/ccAxlZXA.s 			page 7


 232 0002 0268     		ldr	r2, [r0]
 233              		.loc 1 92 5 view .LVU59
 234 0004 074B     		ldr	r3, .L17
 235 0006 9A42     		cmp	r2, r3
 236 0008 00D0     		beq	.L16
 237              	.LVL8:
 238              	.L13:
  93:Src/usart.c   ****   {
  94:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
  95:Src/usart.c   **** 
  96:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 0 */
  97:Src/usart.c   ****     /* Peripheral clock disable */
  98:Src/usart.c   ****     __HAL_RCC_USART1_CLK_DISABLE();
  99:Src/usart.c   **** 
 100:Src/usart.c   ****     /**USART1 GPIO Configuration
 101:Src/usart.c   ****     PA9     ------> USART1_TX
 102:Src/usart.c   ****     PA10     ------> USART1_RX
 103:Src/usart.c   ****     */
 104:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 105:Src/usart.c   **** 
 106:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 107:Src/usart.c   **** 
 108:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 1 */
 109:Src/usart.c   ****   }
 110:Src/usart.c   **** }
 239              		.loc 1 110 1 view .LVU60
 240 000a 08BD     		pop	{r3, pc}
 241              	.LVL9:
 242              	.L16:
  98:Src/usart.c   **** 
 243              		.loc 1 98 5 is_stmt 1 view .LVU61
 244 000c 064A     		ldr	r2, .L17+4
 245 000e 536C     		ldr	r3, [r2, #68]
 246 0010 23F01003 		bic	r3, r3, #16
 247 0014 5364     		str	r3, [r2, #68]
 104:Src/usart.c   **** 
 248              		.loc 1 104 5 view .LVU62
 249 0016 4FF4C061 		mov	r1, #1536
 250 001a 0448     		ldr	r0, .L17+8
 251              	.LVL10:
 104:Src/usart.c   **** 
 252              		.loc 1 104 5 is_stmt 0 view .LVU63
 253 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 254              	.LVL11:
 255              		.loc 1 110 1 view .LVU64
 256 0020 F3E7     		b	.L13
 257              	.L18:
 258 0022 00BF     		.align	2
 259              	.L17:
 260 0024 00100140 		.word	1073811456
 261 0028 00380240 		.word	1073887232
 262 002c 00000240 		.word	1073872896
 263              		.cfi_endproc
 264              	.LFE132:
 266              		.section	.text.__io_putchar,"ax",%progbits
 267              		.align	1
 268              		.global	__io_putchar
ARM GAS  /tmp/ccAxlZXA.s 			page 8


 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 272              		.fpu fpv4-sp-d16
 274              	__io_putchar:
 275              	.LVL12:
 276              	.LFB133:
 111:Src/usart.c   **** 
 112:Src/usart.c   **** /* USER CODE BEGIN 1 */
 113:Src/usart.c   **** #ifdef __GNUC__
 114:Src/usart.c   **** /* With GCC/RAISONANCE, small printf (option LD Linker->Libraries->Small printf
 115:Src/usart.c   ****      set to 'Yes') calls __io_putchar() */
 116:Src/usart.c   **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
 117:Src/usart.c   **** #else
 118:Src/usart.c   **** #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
 119:Src/usart.c   **** #endif /* __GNUC__ */
 120:Src/usart.c   **** /**
 121:Src/usart.c   ****   * @brief  Retargets the C library printf function to the USART.
 122:Src/usart.c   ****   * @param  None
 123:Src/usart.c   ****   * @retval None
 124:Src/usart.c   ****   */
 125:Src/usart.c   **** PUTCHAR_PROTOTYPE
 126:Src/usart.c   **** {
 277              		.loc 1 126 1 is_stmt 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 8
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              		.loc 1 126 1 is_stmt 0 view .LVU66
 282 0000 00B5     		push	{lr}
 283              	.LCFI6:
 284              		.cfi_def_cfa_offset 4
 285              		.cfi_offset 14, -4
 286 0002 83B0     		sub	sp, sp, #12
 287              	.LCFI7:
 288              		.cfi_def_cfa_offset 16
 289 0004 0190     		str	r0, [sp, #4]
 127:Src/usart.c   ****   /* Place your implementation of fputc here */
 128:Src/usart.c   ****   /* e.g. write a character to the EVAL_COM1 and Loop until the end of transmission */
 129:Src/usart.c   ****   HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xffff);
 290              		.loc 1 129 3 is_stmt 1 view .LVU67
 291 0006 4FF6FF73 		movw	r3, #65535
 292 000a 0122     		movs	r2, #1
 293 000c 01A9     		add	r1, sp, #4
 294 000e 0348     		ldr	r0, .L21
 295              	.LVL13:
 296              		.loc 1 129 3 is_stmt 0 view .LVU68
 297 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 298              	.LVL14:
 130:Src/usart.c   **** 
 131:Src/usart.c   ****   return ch;
 299              		.loc 1 131 3 is_stmt 1 view .LVU69
 132:Src/usart.c   **** }
 300              		.loc 1 132 1 is_stmt 0 view .LVU70
 301 0014 0198     		ldr	r0, [sp, #4]
 302 0016 03B0     		add	sp, sp, #12
 303              	.LCFI8:
 304              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccAxlZXA.s 			page 9


 305              		@ sp needed
 306 0018 5DF804FB 		ldr	pc, [sp], #4
 307              	.L22:
 308              		.align	2
 309              	.L21:
 310 001c 00000000 		.word	.LANCHOR0
 311              		.cfi_endproc
 312              	.LFE133:
 314              		.global	huart1
 315              		.section	.bss.huart1,"aw",%nobits
 316              		.align	2
 317              		.set	.LANCHOR0,. + 0
 320              	huart1:
 321 0000 00000000 		.space	68
 321      00000000 
 321      00000000 
 321      00000000 
 321      00000000 
 322              		.text
 323              	.Letext0:
 324              		.file 2 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_type
 325              		.file 3 "/usr/share/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 326              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 327              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 328              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 329              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 330              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 331              		.file 9 "Inc/main.h"
 332              		.file 10 "Inc/usart.h"
ARM GAS  /tmp/ccAxlZXA.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccAxlZXA.s:18     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccAxlZXA.s:26     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccAxlZXA.s:85     .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccAxlZXA.s:91     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccAxlZXA.s:98     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccAxlZXA.s:205    .text.HAL_UART_MspInit:0000000000000070 $d
     /tmp/ccAxlZXA.s:210    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccAxlZXA.s:217    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccAxlZXA.s:260    .text.HAL_UART_MspDeInit:0000000000000024 $d
     /tmp/ccAxlZXA.s:267    .text.__io_putchar:0000000000000000 $t
     /tmp/ccAxlZXA.s:274    .text.__io_putchar:0000000000000000 __io_putchar
     /tmp/ccAxlZXA.s:310    .text.__io_putchar:000000000000001c $d
     /tmp/ccAxlZXA.s:320    .bss.huart1:0000000000000000 huart1
     /tmp/ccAxlZXA.s:316    .bss.huart1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
HAL_UART_Transmit
